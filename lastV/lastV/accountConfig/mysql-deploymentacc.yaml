# Define a 'Service' To Expose mysql to Other Services
apiVersion: v1
kind: Service
metadata:
  name: mysqlacc  # DNS name host name
  labels:
    app: mysqlacc
    tier: database
spec:
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  selector:      # mysql Pod Should contain same labels
    app: mysqlacc
 # clusterIP: None   We Use DNS, Thus ClusterIP is not relevant
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim # name of PVC essential for identifying the storage data
  labels:
    app: mysqlacc
    tier: database
spec:
  accessModes:
    - ReadWriteOnce   #This specifies the mode of the claim that we are trying to create.
  resources:
    requests:
      storage: 1Gi
---
# Configure 'Deployment' of mysql server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysqlacc   #not sure if i should make it host name or mysql
  labels:
    app: mysqlacc
spec:
  replicas: 1
  selector: # mysql Pod Should contain same labels
    matchLabels:
      app: mysqlacc
  strategy:
    type: Recreate
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: mysqlacc
    spec:
      containers:
        - name: mysqlacc
          image: mysql:5.7 # image from docker-hub
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD # Setting Root Password of mysql From a 'Secret'
              valueFrom:
                secretKeyRef:
                  name: db-root-credentials # Name of the 'Secret'
                  key: password   # 'key' inside the Secret which contains required 'value'
#            - name: MYSQL_USER # Setting USER username on mysql From a 'Secret'
#              valueFrom:
#                secretKeyRef:
#                  name: db-credentials
#                  key: username
#            - name: MYSQL_PASSWORD # Setting USER Password on mysql From a 'Secret'
#              valueFrom:
#                secretKeyRef:
#                  name: db-credentials
#                  key: password
            - name: MYSQL_DATABASE # Setting Database Name from a 'ConfigMap'
              valueFrom:
                configMapKeyRef:
                  name: db-conf-acc
                  key: name
          volumeMounts: # Mounting voulume obtained from Persistent Volume Claim
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql #This is the path in the container on which the mounting will take place.

      volumes:
        - name: mysql-persistent-storage # Obtaining 'vloume' from PVC
          persistentVolumeClaim:
            claimName: mysql-pv-claim